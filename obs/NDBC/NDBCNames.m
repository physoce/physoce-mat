function [newName] = NDBCNames(name)
%NDBCNames This function takes in the name of an NDBC variable and returns
%the current name used by NDBC (as of 10/15/2015).  If the name passed in
%is still current it returns that value.  If the name passed in does not
%match any variables listed no value is returned
%   INPUTS
%       name - the NDBC variable name to be examined
%   OUTPUTS
%       newName - the current NDBC variable name.

% Created by C. Ryan Manzer, Moss Landing Marine Labs - 10/15/2015

% WHENEVER OLD/NEW DATA NAME PAIRS ARE FOUND, SIMPLY APPEND TO THIS LIST.
% WHEN 'NEW' NAMES BECOME OUTDATED ADD THE OLD/NEW NAME PAIR TO THE LIST
% AND REPLACE THE 'NEW' NAME IN THE 'NEW NAMES' COLUMN
%
% WHEN VARIABLE NAMES ARE CONSTANT, THEY SHOULD BE ENTERED IN BOTH COLUMNS
% TO ENSURE ALL VALID FIELDS ARE COLLECTED.
%-------------------------------------------------------------------------
%         OLD , NEW
namelist={'YYYY','YY';...
          '#YY','YY';...
          'MM','MM';...
          'DD','DD';...
          'hh','hh';...
          'mm','mm';...
          'WD','WDIR';...
          'DIR','WDIR';...
          'SPD','WSPD';...
          'GSP','GST';...
          'GMN','GTIME';...
          'BAR','PRES';...
          'BARO','PRES';...
          'H0','WVHT';...
          'DOMPD','DPD';...
          'AVP','APD';...
          'SRAD','SWRAD';...
          'SRAD2','SWRAD';...
          'LRAD','LWRAD';...
          'LRAD1','LWRAD';...
          'MWD','MWD';...
          'ATMP','ATMP';...
          'WTMP','WTMP';...
          'DEWP','DEWP';...
          'VIS','VIS';...
          'TIDE','TIDE'...
          };
%--------------------------------------------------------------------------
% Finding potential index values in either the old or new columns
ind1 = find(strcmp(namelist(:,1),name));
ind2 = find(strcmp(namelist(:,2),name));

% Now determining the name is pretty simple
if isempty(ind1) == 1 % if we don't find the name in the 'old names' section of the list
    if isempty(ind2) == 1 % AND we don't find it in the new list
        newName=[];
    else % but if it IS in the new name list
        newName = namelist{ind2,2}; % then we return the same value but from our list
    end
else % if we do find it in the 'old names' section of our list
    newName=namelist{ind1,2};
end

end

